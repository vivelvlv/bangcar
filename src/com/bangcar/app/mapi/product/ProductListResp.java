/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.bangcar.app.mapi.product;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.EncodingUtils;

import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;

/**
 * 产品列表返回
 */
public class ProductListResp implements org.apache.thrift.TBase<ProductListResp, ProductListResp._Fields>, java.io.Serializable, Cloneable, Comparable<ProductListResp> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ProductListResp");

  private static final org.apache.thrift.protocol.TField HEAD_FIELD_DESC = new org.apache.thrift.protocol.TField("head", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField TOTAL_PAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("totalPage", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField FIELD_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("fieldList", org.apache.thrift.protocol.TType.LIST, (short)3);
  private static final org.apache.thrift.protocol.TField CORP_USER_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("corpUserCount", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField CORP_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("corpName", org.apache.thrift.protocol.TType.STRING, (short)5);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new ProductListRespStandardSchemeFactory());
    schemes.put(TupleScheme.class, new ProductListRespTupleSchemeFactory());
  }

  public com.bangcar.app.mapi.base.MApiRespHead head; // required
  /**
   * 总页数
   */
  public int totalPage; // required
  /**
   * 产品信息列表
   */
  public List<ProductListField> fieldList; // required
  /**
   * 同事人数
   */
  public int corpUserCount; // required
  /**
   * 所在公司名
   */
  public String corpName; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    HEAD((short)1, "head"),
    /**
     * 总页数
     */
    TOTAL_PAGE((short)2, "totalPage"),
    /**
     * 产品信息列表
     */
    FIELD_LIST((short)3, "fieldList"),
    /**
     * 同事人数
     */
    CORP_USER_COUNT((short)4, "corpUserCount"),
    /**
     * 所在公司名
     */
    CORP_NAME((short)5, "corpName");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // HEAD
          return HEAD;
        case 2: // TOTAL_PAGE
          return TOTAL_PAGE;
        case 3: // FIELD_LIST
          return FIELD_LIST;
        case 4: // CORP_USER_COUNT
          return CORP_USER_COUNT;
        case 5: // CORP_NAME
          return CORP_NAME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __TOTALPAGE_ISSET_ID = 0;
  private static final int __CORPUSERCOUNT_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.HEAD, new org.apache.thrift.meta_data.FieldMetaData("head", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.bangcar.app.mapi.base.MApiRespHead.class)));
    tmpMap.put(_Fields.TOTAL_PAGE, new org.apache.thrift.meta_data.FieldMetaData("totalPage", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.FIELD_LIST, new org.apache.thrift.meta_data.FieldMetaData("fieldList", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ProductListField.class))));
    tmpMap.put(_Fields.CORP_USER_COUNT, new org.apache.thrift.meta_data.FieldMetaData("corpUserCount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CORP_NAME, new org.apache.thrift.meta_data.FieldMetaData("corpName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ProductListResp.class, metaDataMap);
  }

  public ProductListResp() {
  }

  public ProductListResp(
    com.bangcar.app.mapi.base.MApiRespHead head,
    int totalPage,
    List<ProductListField> fieldList,
    int corpUserCount,
    String corpName)
  {
    this();
    this.head = head;
    this.totalPage = totalPage;
    setTotalPageIsSet(true);
    this.fieldList = fieldList;
    this.corpUserCount = corpUserCount;
    setCorpUserCountIsSet(true);
    this.corpName = corpName;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ProductListResp(ProductListResp other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetHead()) {
      this.head = new com.bangcar.app.mapi.base.MApiRespHead(other.head);
    }
    this.totalPage = other.totalPage;
    if (other.isSetFieldList()) {
      List<ProductListField> __this__fieldList = new ArrayList<ProductListField>(other.fieldList.size());
      for (ProductListField other_element : other.fieldList) {
        __this__fieldList.add(new ProductListField(other_element));
      }
      this.fieldList = __this__fieldList;
    }
    this.corpUserCount = other.corpUserCount;
    if (other.isSetCorpName()) {
      this.corpName = other.corpName;
    }
  }

  public ProductListResp deepCopy() {
    return new ProductListResp(this);
  }

  @Override
  public void clear() {
    this.head = null;
    setTotalPageIsSet(false);
    this.totalPage = 0;
    this.fieldList = null;
    setCorpUserCountIsSet(false);
    this.corpUserCount = 0;
    this.corpName = null;
  }

  public com.bangcar.app.mapi.base.MApiRespHead getHead() {
    return this.head;
  }

  public ProductListResp setHead(com.bangcar.app.mapi.base.MApiRespHead head) {
    this.head = head;
    return this;
  }

  public void unsetHead() {
    this.head = null;
  }

  /** Returns true if field head is set (has been assigned a value) and false otherwise */
  public boolean isSetHead() {
    return this.head != null;
  }

  public void setHeadIsSet(boolean value) {
    if (!value) {
      this.head = null;
    }
  }

  /**
   * 总页数
   */
  public int getTotalPage() {
    return this.totalPage;
  }

  /**
   * 总页数
   */
  public ProductListResp setTotalPage(int totalPage) {
    this.totalPage = totalPage;
    setTotalPageIsSet(true);
    return this;
  }

  public void unsetTotalPage() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TOTALPAGE_ISSET_ID);
  }

  /** Returns true if field totalPage is set (has been assigned a value) and false otherwise */
  public boolean isSetTotalPage() {
    return EncodingUtils.testBit(__isset_bitfield, __TOTALPAGE_ISSET_ID);
  }

  public void setTotalPageIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TOTALPAGE_ISSET_ID, value);
  }

  public int getFieldListSize() {
    return (this.fieldList == null) ? 0 : this.fieldList.size();
  }

  public java.util.Iterator<ProductListField> getFieldListIterator() {
    return (this.fieldList == null) ? null : this.fieldList.iterator();
  }

  public void addToFieldList(ProductListField elem) {
    if (this.fieldList == null) {
      this.fieldList = new ArrayList<ProductListField>();
    }
    this.fieldList.add(elem);
  }

  /**
   * 产品信息列表
   */
  public List<ProductListField> getFieldList() {
    return this.fieldList;
  }

  /**
   * 产品信息列表
   */
  public ProductListResp setFieldList(List<ProductListField> fieldList) {
    this.fieldList = fieldList;
    return this;
  }

  public void unsetFieldList() {
    this.fieldList = null;
  }

  /** Returns true if field fieldList is set (has been assigned a value) and false otherwise */
  public boolean isSetFieldList() {
    return this.fieldList != null;
  }

  public void setFieldListIsSet(boolean value) {
    if (!value) {
      this.fieldList = null;
    }
  }

  /**
   * 同事人数
   */
  public int getCorpUserCount() {
    return this.corpUserCount;
  }

  /**
   * 同事人数
   */
  public ProductListResp setCorpUserCount(int corpUserCount) {
    this.corpUserCount = corpUserCount;
    setCorpUserCountIsSet(true);
    return this;
  }

  public void unsetCorpUserCount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CORPUSERCOUNT_ISSET_ID);
  }

  /** Returns true if field corpUserCount is set (has been assigned a value) and false otherwise */
  public boolean isSetCorpUserCount() {
    return EncodingUtils.testBit(__isset_bitfield, __CORPUSERCOUNT_ISSET_ID);
  }

  public void setCorpUserCountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CORPUSERCOUNT_ISSET_ID, value);
  }

  /**
   * 所在公司名
   */
  public String getCorpName() {
    return this.corpName;
  }

  /**
   * 所在公司名
   */
  public ProductListResp setCorpName(String corpName) {
    this.corpName = corpName;
    return this;
  }

  public void unsetCorpName() {
    this.corpName = null;
  }

  /** Returns true if field corpName is set (has been assigned a value) and false otherwise */
  public boolean isSetCorpName() {
    return this.corpName != null;
  }

  public void setCorpNameIsSet(boolean value) {
    if (!value) {
      this.corpName = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case HEAD:
      if (value == null) {
        unsetHead();
      } else {
        setHead((com.bangcar.app.mapi.base.MApiRespHead)value);
      }
      break;

    case TOTAL_PAGE:
      if (value == null) {
        unsetTotalPage();
      } else {
        setTotalPage((Integer)value);
      }
      break;

    case FIELD_LIST:
      if (value == null) {
        unsetFieldList();
      } else {
        setFieldList((List<ProductListField>)value);
      }
      break;

    case CORP_USER_COUNT:
      if (value == null) {
        unsetCorpUserCount();
      } else {
        setCorpUserCount((Integer)value);
      }
      break;

    case CORP_NAME:
      if (value == null) {
        unsetCorpName();
      } else {
        setCorpName((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case HEAD:
      return getHead();

    case TOTAL_PAGE:
      return Integer.valueOf(getTotalPage());

    case FIELD_LIST:
      return getFieldList();

    case CORP_USER_COUNT:
      return Integer.valueOf(getCorpUserCount());

    case CORP_NAME:
      return getCorpName();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case HEAD:
      return isSetHead();
    case TOTAL_PAGE:
      return isSetTotalPage();
    case FIELD_LIST:
      return isSetFieldList();
    case CORP_USER_COUNT:
      return isSetCorpUserCount();
    case CORP_NAME:
      return isSetCorpName();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ProductListResp)
      return this.equals((ProductListResp)that);
    return false;
  }

  public boolean equals(ProductListResp that) {
    if (that == null)
      return false;

    boolean this_present_head = true && this.isSetHead();
    boolean that_present_head = true && that.isSetHead();
    if (this_present_head || that_present_head) {
      if (!(this_present_head && that_present_head))
        return false;
      if (!this.head.equals(that.head))
        return false;
    }

    boolean this_present_totalPage = true;
    boolean that_present_totalPage = true;
    if (this_present_totalPage || that_present_totalPage) {
      if (!(this_present_totalPage && that_present_totalPage))
        return false;
      if (this.totalPage != that.totalPage)
        return false;
    }

    boolean this_present_fieldList = true && this.isSetFieldList();
    boolean that_present_fieldList = true && that.isSetFieldList();
    if (this_present_fieldList || that_present_fieldList) {
      if (!(this_present_fieldList && that_present_fieldList))
        return false;
      if (!this.fieldList.equals(that.fieldList))
        return false;
    }

    boolean this_present_corpUserCount = true;
    boolean that_present_corpUserCount = true;
    if (this_present_corpUserCount || that_present_corpUserCount) {
      if (!(this_present_corpUserCount && that_present_corpUserCount))
        return false;
      if (this.corpUserCount != that.corpUserCount)
        return false;
    }

    boolean this_present_corpName = true && this.isSetCorpName();
    boolean that_present_corpName = true && that.isSetCorpName();
    if (this_present_corpName || that_present_corpName) {
      if (!(this_present_corpName && that_present_corpName))
        return false;
      if (!this.corpName.equals(that.corpName))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  @Override
  public int compareTo(ProductListResp other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetHead()).compareTo(other.isSetHead());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHead()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.head, other.head);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTotalPage()).compareTo(other.isSetTotalPage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTotalPage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.totalPage, other.totalPage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFieldList()).compareTo(other.isSetFieldList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFieldList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fieldList, other.fieldList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCorpUserCount()).compareTo(other.isSetCorpUserCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCorpUserCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.corpUserCount, other.corpUserCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCorpName()).compareTo(other.isSetCorpName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCorpName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.corpName, other.corpName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ProductListResp(");
    boolean first = true;

    sb.append("head:");
    if (this.head == null) {
      sb.append("null");
    } else {
      sb.append(this.head);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("totalPage:");
    sb.append(this.totalPage);
    first = false;
    if (!first) sb.append(", ");
    sb.append("fieldList:");
    if (this.fieldList == null) {
      sb.append("null");
    } else {
      sb.append(this.fieldList);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("corpUserCount:");
    sb.append(this.corpUserCount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("corpName:");
    if (this.corpName == null) {
      sb.append("null");
    } else {
      sb.append(this.corpName);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (head != null) {
      head.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ProductListRespStandardSchemeFactory implements SchemeFactory {
    public ProductListRespStandardScheme getScheme() {
      return new ProductListRespStandardScheme();
    }
  }

  private static class ProductListRespStandardScheme extends StandardScheme<ProductListResp> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ProductListResp struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // HEAD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.head = new com.bangcar.app.mapi.base.MApiRespHead();
              struct.head.read(iprot);
              struct.setHeadIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // TOTAL_PAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.totalPage = iprot.readI32();
              struct.setTotalPageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // FIELD_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list32 = iprot.readListBegin();
                struct.fieldList = new ArrayList<ProductListField>(_list32.size);
                for (int _i33 = 0; _i33 < _list32.size; ++_i33)
                {
                  ProductListField _elem34;
                  _elem34 = new ProductListField();
                  _elem34.read(iprot);
                  struct.fieldList.add(_elem34);
                }
                iprot.readListEnd();
              }
              struct.setFieldListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // CORP_USER_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.corpUserCount = iprot.readI32();
              struct.setCorpUserCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // CORP_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.corpName = iprot.readString();
              struct.setCorpNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ProductListResp struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.head != null) {
        oprot.writeFieldBegin(HEAD_FIELD_DESC);
        struct.head.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(TOTAL_PAGE_FIELD_DESC);
      oprot.writeI32(struct.totalPage);
      oprot.writeFieldEnd();
      if (struct.fieldList != null) {
        oprot.writeFieldBegin(FIELD_LIST_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.fieldList.size()));
          for (ProductListField _iter35 : struct.fieldList)
          {
            _iter35.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CORP_USER_COUNT_FIELD_DESC);
      oprot.writeI32(struct.corpUserCount);
      oprot.writeFieldEnd();
      if (struct.corpName != null) {
        oprot.writeFieldBegin(CORP_NAME_FIELD_DESC);
        oprot.writeString(struct.corpName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ProductListRespTupleSchemeFactory implements SchemeFactory {
    public ProductListRespTupleScheme getScheme() {
      return new ProductListRespTupleScheme();
    }
  }

  private static class ProductListRespTupleScheme extends TupleScheme<ProductListResp> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ProductListResp struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetHead()) {
        optionals.set(0);
      }
      if (struct.isSetTotalPage()) {
        optionals.set(1);
      }
      if (struct.isSetFieldList()) {
        optionals.set(2);
      }
      if (struct.isSetCorpUserCount()) {
        optionals.set(3);
      }
      if (struct.isSetCorpName()) {
        optionals.set(4);
      }
      oprot.writeBitSet(optionals, 5);
      if (struct.isSetHead()) {
        struct.head.write(oprot);
      }
      if (struct.isSetTotalPage()) {
        oprot.writeI32(struct.totalPage);
      }
      if (struct.isSetFieldList()) {
        {
          oprot.writeI32(struct.fieldList.size());
          for (ProductListField _iter36 : struct.fieldList)
          {
            _iter36.write(oprot);
          }
        }
      }
      if (struct.isSetCorpUserCount()) {
        oprot.writeI32(struct.corpUserCount);
      }
      if (struct.isSetCorpName()) {
        oprot.writeString(struct.corpName);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ProductListResp struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(5);
      if (incoming.get(0)) {
        struct.head = new com.bangcar.app.mapi.base.MApiRespHead();
        struct.head.read(iprot);
        struct.setHeadIsSet(true);
      }
      if (incoming.get(1)) {
        struct.totalPage = iprot.readI32();
        struct.setTotalPageIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TList _list37 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.fieldList = new ArrayList<ProductListField>(_list37.size);
          for (int _i38 = 0; _i38 < _list37.size; ++_i38)
          {
            ProductListField _elem39;
            _elem39 = new ProductListField();
            _elem39.read(iprot);
            struct.fieldList.add(_elem39);
          }
        }
        struct.setFieldListIsSet(true);
      }
      if (incoming.get(3)) {
        struct.corpUserCount = iprot.readI32();
        struct.setCorpUserCountIsSet(true);
      }
      if (incoming.get(4)) {
        struct.corpName = iprot.readString();
        struct.setCorpNameIsSet(true);
      }
    }
  }

}

