/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.bangcar.app.mapi.order;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.EncodingUtils;

import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;

public class InRecentSettlingOrder implements org.apache.thrift.TBase<InRecentSettlingOrder, InRecentSettlingOrder._Fields>, java.io.Serializable, Cloneable, Comparable<InRecentSettlingOrder> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("InRecentSettlingOrder");

  private static final org.apache.thrift.protocol.TField DAY_FIELD_DESC = new org.apache.thrift.protocol.TField("day", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField PRODUCT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("productName", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField INCOME_END_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("incomeEndTime", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField ORDER_TOTAL_PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("orderTotalPrice", org.apache.thrift.protocol.TType.STRING, (short)4);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new InRecentSettlingOrderStandardSchemeFactory());
    schemes.put(TupleScheme.class, new InRecentSettlingOrderTupleSchemeFactory());
  }

  /**
   * 剩余天数
   */
  public int day; // required
  /**
   * 产品名
   */
  public String productName; // required
  /**
   * 预期结息日期
   */
  public String incomeEndTime; // required
  /**
   * 订单金额
   */
  public String orderTotalPrice; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 剩余天数
     */
    DAY((short)1, "day"),
    /**
     * 产品名
     */
    PRODUCT_NAME((short)2, "productName"),
    /**
     * 预期结息日期
     */
    INCOME_END_TIME((short)3, "incomeEndTime"),
    /**
     * 订单金额
     */
    ORDER_TOTAL_PRICE((short)4, "orderTotalPrice");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // DAY
          return DAY;
        case 2: // PRODUCT_NAME
          return PRODUCT_NAME;
        case 3: // INCOME_END_TIME
          return INCOME_END_TIME;
        case 4: // ORDER_TOTAL_PRICE
          return ORDER_TOTAL_PRICE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __DAY_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.DAY, new org.apache.thrift.meta_data.FieldMetaData("day", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PRODUCT_NAME, new org.apache.thrift.meta_data.FieldMetaData("productName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.INCOME_END_TIME, new org.apache.thrift.meta_data.FieldMetaData("incomeEndTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORDER_TOTAL_PRICE, new org.apache.thrift.meta_data.FieldMetaData("orderTotalPrice", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(InRecentSettlingOrder.class, metaDataMap);
  }

  public InRecentSettlingOrder() {
  }

  public InRecentSettlingOrder(
    int day,
    String productName,
    String incomeEndTime,
    String orderTotalPrice)
  {
    this();
    this.day = day;
    setDayIsSet(true);
    this.productName = productName;
    this.incomeEndTime = incomeEndTime;
    this.orderTotalPrice = orderTotalPrice;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public InRecentSettlingOrder(InRecentSettlingOrder other) {
    __isset_bitfield = other.__isset_bitfield;
    this.day = other.day;
    if (other.isSetProductName()) {
      this.productName = other.productName;
    }
    if (other.isSetIncomeEndTime()) {
      this.incomeEndTime = other.incomeEndTime;
    }
    if (other.isSetOrderTotalPrice()) {
      this.orderTotalPrice = other.orderTotalPrice;
    }
  }

  public InRecentSettlingOrder deepCopy() {
    return new InRecentSettlingOrder(this);
  }

  @Override
  public void clear() {
    setDayIsSet(false);
    this.day = 0;
    this.productName = null;
    this.incomeEndTime = null;
    this.orderTotalPrice = null;
  }

  /**
   * 剩余天数
   */
  public int getDay() {
    return this.day;
  }

  /**
   * 剩余天数
   */
  public InRecentSettlingOrder setDay(int day) {
    this.day = day;
    setDayIsSet(true);
    return this;
  }

  public void unsetDay() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DAY_ISSET_ID);
  }

  /** Returns true if field day is set (has been assigned a value) and false otherwise */
  public boolean isSetDay() {
    return EncodingUtils.testBit(__isset_bitfield, __DAY_ISSET_ID);
  }

  public void setDayIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DAY_ISSET_ID, value);
  }

  /**
   * 产品名
   */
  public String getProductName() {
    return this.productName;
  }

  /**
   * 产品名
   */
  public InRecentSettlingOrder setProductName(String productName) {
    this.productName = productName;
    return this;
  }

  public void unsetProductName() {
    this.productName = null;
  }

  /** Returns true if field productName is set (has been assigned a value) and false otherwise */
  public boolean isSetProductName() {
    return this.productName != null;
  }

  public void setProductNameIsSet(boolean value) {
    if (!value) {
      this.productName = null;
    }
  }

  /**
   * 预期结息日期
   */
  public String getIncomeEndTime() {
    return this.incomeEndTime;
  }

  /**
   * 预期结息日期
   */
  public InRecentSettlingOrder setIncomeEndTime(String incomeEndTime) {
    this.incomeEndTime = incomeEndTime;
    return this;
  }

  public void unsetIncomeEndTime() {
    this.incomeEndTime = null;
  }

  /** Returns true if field incomeEndTime is set (has been assigned a value) and false otherwise */
  public boolean isSetIncomeEndTime() {
    return this.incomeEndTime != null;
  }

  public void setIncomeEndTimeIsSet(boolean value) {
    if (!value) {
      this.incomeEndTime = null;
    }
  }

  /**
   * 订单金额
   */
  public String getOrderTotalPrice() {
    return this.orderTotalPrice;
  }

  /**
   * 订单金额
   */
  public InRecentSettlingOrder setOrderTotalPrice(String orderTotalPrice) {
    this.orderTotalPrice = orderTotalPrice;
    return this;
  }

  public void unsetOrderTotalPrice() {
    this.orderTotalPrice = null;
  }

  /** Returns true if field orderTotalPrice is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderTotalPrice() {
    return this.orderTotalPrice != null;
  }

  public void setOrderTotalPriceIsSet(boolean value) {
    if (!value) {
      this.orderTotalPrice = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case DAY:
      if (value == null) {
        unsetDay();
      } else {
        setDay((Integer)value);
      }
      break;

    case PRODUCT_NAME:
      if (value == null) {
        unsetProductName();
      } else {
        setProductName((String)value);
      }
      break;

    case INCOME_END_TIME:
      if (value == null) {
        unsetIncomeEndTime();
      } else {
        setIncomeEndTime((String)value);
      }
      break;

    case ORDER_TOTAL_PRICE:
      if (value == null) {
        unsetOrderTotalPrice();
      } else {
        setOrderTotalPrice((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case DAY:
      return Integer.valueOf(getDay());

    case PRODUCT_NAME:
      return getProductName();

    case INCOME_END_TIME:
      return getIncomeEndTime();

    case ORDER_TOTAL_PRICE:
      return getOrderTotalPrice();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case DAY:
      return isSetDay();
    case PRODUCT_NAME:
      return isSetProductName();
    case INCOME_END_TIME:
      return isSetIncomeEndTime();
    case ORDER_TOTAL_PRICE:
      return isSetOrderTotalPrice();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof InRecentSettlingOrder)
      return this.equals((InRecentSettlingOrder)that);
    return false;
  }

  public boolean equals(InRecentSettlingOrder that) {
    if (that == null)
      return false;

    boolean this_present_day = true;
    boolean that_present_day = true;
    if (this_present_day || that_present_day) {
      if (!(this_present_day && that_present_day))
        return false;
      if (this.day != that.day)
        return false;
    }

    boolean this_present_productName = true && this.isSetProductName();
    boolean that_present_productName = true && that.isSetProductName();
    if (this_present_productName || that_present_productName) {
      if (!(this_present_productName && that_present_productName))
        return false;
      if (!this.productName.equals(that.productName))
        return false;
    }

    boolean this_present_incomeEndTime = true && this.isSetIncomeEndTime();
    boolean that_present_incomeEndTime = true && that.isSetIncomeEndTime();
    if (this_present_incomeEndTime || that_present_incomeEndTime) {
      if (!(this_present_incomeEndTime && that_present_incomeEndTime))
        return false;
      if (!this.incomeEndTime.equals(that.incomeEndTime))
        return false;
    }

    boolean this_present_orderTotalPrice = true && this.isSetOrderTotalPrice();
    boolean that_present_orderTotalPrice = true && that.isSetOrderTotalPrice();
    if (this_present_orderTotalPrice || that_present_orderTotalPrice) {
      if (!(this_present_orderTotalPrice && that_present_orderTotalPrice))
        return false;
      if (!this.orderTotalPrice.equals(that.orderTotalPrice))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  @Override
  public int compareTo(InRecentSettlingOrder other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetDay()).compareTo(other.isSetDay());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDay()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.day, other.day);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductName()).compareTo(other.isSetProductName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productName, other.productName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIncomeEndTime()).compareTo(other.isSetIncomeEndTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIncomeEndTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.incomeEndTime, other.incomeEndTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderTotalPrice()).compareTo(other.isSetOrderTotalPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderTotalPrice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderTotalPrice, other.orderTotalPrice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("InRecentSettlingOrder(");
    boolean first = true;

    sb.append("day:");
    sb.append(this.day);
    first = false;
    if (!first) sb.append(", ");
    sb.append("productName:");
    if (this.productName == null) {
      sb.append("null");
    } else {
      sb.append(this.productName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("incomeEndTime:");
    if (this.incomeEndTime == null) {
      sb.append("null");
    } else {
      sb.append(this.incomeEndTime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orderTotalPrice:");
    if (this.orderTotalPrice == null) {
      sb.append("null");
    } else {
      sb.append(this.orderTotalPrice);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class InRecentSettlingOrderStandardSchemeFactory implements SchemeFactory {
    public InRecentSettlingOrderStandardScheme getScheme() {
      return new InRecentSettlingOrderStandardScheme();
    }
  }

  private static class InRecentSettlingOrderStandardScheme extends StandardScheme<InRecentSettlingOrder> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, InRecentSettlingOrder struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // DAY
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.day = iprot.readI32();
              struct.setDayIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // PRODUCT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.productName = iprot.readString();
              struct.setProductNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // INCOME_END_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.incomeEndTime = iprot.readString();
              struct.setIncomeEndTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // ORDER_TOTAL_PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orderTotalPrice = iprot.readString();
              struct.setOrderTotalPriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, InRecentSettlingOrder struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(DAY_FIELD_DESC);
      oprot.writeI32(struct.day);
      oprot.writeFieldEnd();
      if (struct.productName != null) {
        oprot.writeFieldBegin(PRODUCT_NAME_FIELD_DESC);
        oprot.writeString(struct.productName);
        oprot.writeFieldEnd();
      }
      if (struct.incomeEndTime != null) {
        oprot.writeFieldBegin(INCOME_END_TIME_FIELD_DESC);
        oprot.writeString(struct.incomeEndTime);
        oprot.writeFieldEnd();
      }
      if (struct.orderTotalPrice != null) {
        oprot.writeFieldBegin(ORDER_TOTAL_PRICE_FIELD_DESC);
        oprot.writeString(struct.orderTotalPrice);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class InRecentSettlingOrderTupleSchemeFactory implements SchemeFactory {
    public InRecentSettlingOrderTupleScheme getScheme() {
      return new InRecentSettlingOrderTupleScheme();
    }
  }

  private static class InRecentSettlingOrderTupleScheme extends TupleScheme<InRecentSettlingOrder> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, InRecentSettlingOrder struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetDay()) {
        optionals.set(0);
      }
      if (struct.isSetProductName()) {
        optionals.set(1);
      }
      if (struct.isSetIncomeEndTime()) {
        optionals.set(2);
      }
      if (struct.isSetOrderTotalPrice()) {
        optionals.set(3);
      }
      oprot.writeBitSet(optionals, 4);
      if (struct.isSetDay()) {
        oprot.writeI32(struct.day);
      }
      if (struct.isSetProductName()) {
        oprot.writeString(struct.productName);
      }
      if (struct.isSetIncomeEndTime()) {
        oprot.writeString(struct.incomeEndTime);
      }
      if (struct.isSetOrderTotalPrice()) {
        oprot.writeString(struct.orderTotalPrice);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, InRecentSettlingOrder struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(4);
      if (incoming.get(0)) {
        struct.day = iprot.readI32();
        struct.setDayIsSet(true);
      }
      if (incoming.get(1)) {
        struct.productName = iprot.readString();
        struct.setProductNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.incomeEndTime = iprot.readString();
        struct.setIncomeEndTimeIsSet(true);
      }
      if (incoming.get(3)) {
        struct.orderTotalPrice = iprot.readString();
        struct.setOrderTotalPriceIsSet(true);
      }
    }
  }

}

