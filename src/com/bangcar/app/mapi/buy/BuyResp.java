/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.bangcar.app.mapi.buy;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.EncodingUtils;

import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;

public class BuyResp implements org.apache.thrift.TBase<BuyResp, BuyResp._Fields>, java.io.Serializable, Cloneable, Comparable<BuyResp> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("BuyResp");

  private static final org.apache.thrift.protocol.TField HEAD_FIELD_DESC = new org.apache.thrift.protocol.TField("head", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField AUTH_STEP_FIELD_DESC = new org.apache.thrift.protocol.TField("authStep", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField CAN_BUY_FIELD_DESC = new org.apache.thrift.protocol.TField("canBuy", org.apache.thrift.protocol.TType.BOOL, (short)3);
  private static final org.apache.thrift.protocol.TField VIRTUAL_REMAIN_SHARE_FIELD_DESC = new org.apache.thrift.protocol.TField("virtualRemainShare", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField MAX_BUY_LIMIT_FIELD_DESC = new org.apache.thrift.protocol.TField("maxBuyLimit", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField MIN_BUY_LIMIT_FIELD_DESC = new org.apache.thrift.protocol.TField("minBuyLimit", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField INCR_SHARE_FIELD_DESC = new org.apache.thrift.protocol.TField("incrShare", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField INCOME_RATE_E6_FIELD_DESC = new org.apache.thrift.protocol.TField("incomeRateE6", org.apache.thrift.protocol.TType.I64, (short)8);
  private static final org.apache.thrift.protocol.TField MIN_INCOME_RATE_E6_FIELD_DESC = new org.apache.thrift.protocol.TField("minIncomeRateE6", org.apache.thrift.protocol.TType.I64, (short)9);
  private static final org.apache.thrift.protocol.TField PRODUCT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("productName", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField INCOME_BEGIN_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("incomeBeginDate", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField INCOME_END_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("incomeEndDate", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField INCOME_PERIOD_FIELD_DESC = new org.apache.thrift.protocol.TField("incomePeriod", org.apache.thrift.protocol.TType.I32, (short)13);
  private static final org.apache.thrift.protocol.TField UNPAID_SHARE_FIELD_DESC = new org.apache.thrift.protocol.TField("unpaidShare", org.apache.thrift.protocol.TType.I32, (short)14);
  private static final org.apache.thrift.protocol.TField INCOME_TIP_FIELD_DESC = new org.apache.thrift.protocol.TField("incomeTip", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField INCOME_RATE_TIP_FIELD_DESC = new org.apache.thrift.protocol.TField("incomeRateTip", org.apache.thrift.protocol.TType.STRING, (short)16);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new BuyRespStandardSchemeFactory());
    schemes.put(TupleScheme.class, new BuyRespTupleSchemeFactory());
  }

  public com.bangcar.app.mapi.base.MApiRespHead head; // required
  /**
   * 认证阶段
   * 
   * @see com.bangcar.app.mapi.common.EAuthStep
   */
  public com.bangcar.app.mapi.common.EAuthStep authStep; // required
  /**
   * 是否可进购买页（满足实际库存、购买时间限制，存在未支付时能进购买页但不允许下单，通过virtualRemainShare来判断），若为false不能展示购买页，可刷新产品页
   */
  public boolean canBuy; // required
  /**
   * 剩余库存（虚拟）
   */
  public int virtualRemainShare; // required
  /**
   * 当次支付上限[实际是min(virtualRemainShare, maxBuyShare)]
   */
  public int maxBuyLimit; // required
  /**
   * 当次支付下限[实际是min(virtualRemainShare, minBuyShare)]
   */
  public int minBuyLimit; // required
  /**
   * 增量
   */
  public int incrShare; // required
  /**
   * 最高收益率
   */
  public long incomeRateE6; // required
  /**
   * 最低收益率
   */
  public long minIncomeRateE6; // required
  /**
   * 产品名称
   */
  public String productName; // required
  /**
   * 起息日
   */
  public String incomeBeginDate; // required
  /**
   * 到期日
   */
  public String incomeEndDate; // required
  /**
   * 计息天数
   */
  public int incomePeriod; // required
  /**
   * 未支付金额
   */
  public int unpaidShare; // required
  /**
   * 收益提示文案
   */
  public String incomeTip; // required
  /**
   * 收益率提示文案
   */
  public String incomeRateTip; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    HEAD((short)1, "head"),
    /**
     * 认证阶段
     * 
     * @see com.bangcar.app.mapi.common.EAuthStep
     */
    AUTH_STEP((short)2, "authStep"),
    /**
     * 是否可进购买页（满足实际库存、购买时间限制，存在未支付时能进购买页但不允许下单，通过virtualRemainShare来判断），若为false不能展示购买页，可刷新产品页
     */
    CAN_BUY((short)3, "canBuy"),
    /**
     * 剩余库存（虚拟）
     */
    VIRTUAL_REMAIN_SHARE((short)4, "virtualRemainShare"),
    /**
     * 当次支付上限[实际是min(virtualRemainShare, maxBuyShare)]
     */
    MAX_BUY_LIMIT((short)5, "maxBuyLimit"),
    /**
     * 当次支付下限[实际是min(virtualRemainShare, minBuyShare)]
     */
    MIN_BUY_LIMIT((short)6, "minBuyLimit"),
    /**
     * 增量
     */
    INCR_SHARE((short)7, "incrShare"),
    /**
     * 最高收益率
     */
    INCOME_RATE_E6((short)8, "incomeRateE6"),
    /**
     * 最低收益率
     */
    MIN_INCOME_RATE_E6((short)9, "minIncomeRateE6"),
    /**
     * 产品名称
     */
    PRODUCT_NAME((short)10, "productName"),
    /**
     * 起息日
     */
    INCOME_BEGIN_DATE((short)11, "incomeBeginDate"),
    /**
     * 到期日
     */
    INCOME_END_DATE((short)12, "incomeEndDate"),
    /**
     * 计息天数
     */
    INCOME_PERIOD((short)13, "incomePeriod"),
    /**
     * 未支付金额
     */
    UNPAID_SHARE((short)14, "unpaidShare"),
    /**
     * 收益提示文案
     */
    INCOME_TIP((short)15, "incomeTip"),
    /**
     * 收益率提示文案
     */
    INCOME_RATE_TIP((short)16, "incomeRateTip");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // HEAD
          return HEAD;
        case 2: // AUTH_STEP
          return AUTH_STEP;
        case 3: // CAN_BUY
          return CAN_BUY;
        case 4: // VIRTUAL_REMAIN_SHARE
          return VIRTUAL_REMAIN_SHARE;
        case 5: // MAX_BUY_LIMIT
          return MAX_BUY_LIMIT;
        case 6: // MIN_BUY_LIMIT
          return MIN_BUY_LIMIT;
        case 7: // INCR_SHARE
          return INCR_SHARE;
        case 8: // INCOME_RATE_E6
          return INCOME_RATE_E6;
        case 9: // MIN_INCOME_RATE_E6
          return MIN_INCOME_RATE_E6;
        case 10: // PRODUCT_NAME
          return PRODUCT_NAME;
        case 11: // INCOME_BEGIN_DATE
          return INCOME_BEGIN_DATE;
        case 12: // INCOME_END_DATE
          return INCOME_END_DATE;
        case 13: // INCOME_PERIOD
          return INCOME_PERIOD;
        case 14: // UNPAID_SHARE
          return UNPAID_SHARE;
        case 15: // INCOME_TIP
          return INCOME_TIP;
        case 16: // INCOME_RATE_TIP
          return INCOME_RATE_TIP;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __CANBUY_ISSET_ID = 0;
  private static final int __VIRTUALREMAINSHARE_ISSET_ID = 1;
  private static final int __MAXBUYLIMIT_ISSET_ID = 2;
  private static final int __MINBUYLIMIT_ISSET_ID = 3;
  private static final int __INCRSHARE_ISSET_ID = 4;
  private static final int __INCOMERATEE6_ISSET_ID = 5;
  private static final int __MININCOMERATEE6_ISSET_ID = 6;
  private static final int __INCOMEPERIOD_ISSET_ID = 7;
  private static final int __UNPAIDSHARE_ISSET_ID = 8;
  private short __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.HEAD, new org.apache.thrift.meta_data.FieldMetaData("head", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.bangcar.app.mapi.base.MApiRespHead.class)));
    tmpMap.put(_Fields.AUTH_STEP, new org.apache.thrift.meta_data.FieldMetaData("authStep", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, com.bangcar.app.mapi.common.EAuthStep.class)));
    tmpMap.put(_Fields.CAN_BUY, new org.apache.thrift.meta_data.FieldMetaData("canBuy", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.VIRTUAL_REMAIN_SHARE, new org.apache.thrift.meta_data.FieldMetaData("virtualRemainShare", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.MAX_BUY_LIMIT, new org.apache.thrift.meta_data.FieldMetaData("maxBuyLimit", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.MIN_BUY_LIMIT, new org.apache.thrift.meta_data.FieldMetaData("minBuyLimit", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.INCR_SHARE, new org.apache.thrift.meta_data.FieldMetaData("incrShare", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.INCOME_RATE_E6, new org.apache.thrift.meta_data.FieldMetaData("incomeRateE6", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.MIN_INCOME_RATE_E6, new org.apache.thrift.meta_data.FieldMetaData("minIncomeRateE6", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.PRODUCT_NAME, new org.apache.thrift.meta_data.FieldMetaData("productName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.INCOME_BEGIN_DATE, new org.apache.thrift.meta_data.FieldMetaData("incomeBeginDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.INCOME_END_DATE, new org.apache.thrift.meta_data.FieldMetaData("incomeEndDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.INCOME_PERIOD, new org.apache.thrift.meta_data.FieldMetaData("incomePeriod", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.UNPAID_SHARE, new org.apache.thrift.meta_data.FieldMetaData("unpaidShare", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.INCOME_TIP, new org.apache.thrift.meta_data.FieldMetaData("incomeTip", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.INCOME_RATE_TIP, new org.apache.thrift.meta_data.FieldMetaData("incomeRateTip", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(BuyResp.class, metaDataMap);
  }

  public BuyResp() {
  }

  public BuyResp(
    com.bangcar.app.mapi.base.MApiRespHead head,
    com.bangcar.app.mapi.common.EAuthStep authStep,
    boolean canBuy,
    int virtualRemainShare,
    int maxBuyLimit,
    int minBuyLimit,
    int incrShare,
    long incomeRateE6,
    long minIncomeRateE6,
    String productName,
    String incomeBeginDate,
    String incomeEndDate,
    int incomePeriod,
    int unpaidShare,
    String incomeTip,
    String incomeRateTip)
  {
    this();
    this.head = head;
    this.authStep = authStep;
    this.canBuy = canBuy;
    setCanBuyIsSet(true);
    this.virtualRemainShare = virtualRemainShare;
    setVirtualRemainShareIsSet(true);
    this.maxBuyLimit = maxBuyLimit;
    setMaxBuyLimitIsSet(true);
    this.minBuyLimit = minBuyLimit;
    setMinBuyLimitIsSet(true);
    this.incrShare = incrShare;
    setIncrShareIsSet(true);
    this.incomeRateE6 = incomeRateE6;
    setIncomeRateE6IsSet(true);
    this.minIncomeRateE6 = minIncomeRateE6;
    setMinIncomeRateE6IsSet(true);
    this.productName = productName;
    this.incomeBeginDate = incomeBeginDate;
    this.incomeEndDate = incomeEndDate;
    this.incomePeriod = incomePeriod;
    setIncomePeriodIsSet(true);
    this.unpaidShare = unpaidShare;
    setUnpaidShareIsSet(true);
    this.incomeTip = incomeTip;
    this.incomeRateTip = incomeRateTip;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public BuyResp(BuyResp other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetHead()) {
      this.head = new com.bangcar.app.mapi.base.MApiRespHead(other.head);
    }
    if (other.isSetAuthStep()) {
      this.authStep = other.authStep;
    }
    this.canBuy = other.canBuy;
    this.virtualRemainShare = other.virtualRemainShare;
    this.maxBuyLimit = other.maxBuyLimit;
    this.minBuyLimit = other.minBuyLimit;
    this.incrShare = other.incrShare;
    this.incomeRateE6 = other.incomeRateE6;
    this.minIncomeRateE6 = other.minIncomeRateE6;
    if (other.isSetProductName()) {
      this.productName = other.productName;
    }
    if (other.isSetIncomeBeginDate()) {
      this.incomeBeginDate = other.incomeBeginDate;
    }
    if (other.isSetIncomeEndDate()) {
      this.incomeEndDate = other.incomeEndDate;
    }
    this.incomePeriod = other.incomePeriod;
    this.unpaidShare = other.unpaidShare;
    if (other.isSetIncomeTip()) {
      this.incomeTip = other.incomeTip;
    }
    if (other.isSetIncomeRateTip()) {
      this.incomeRateTip = other.incomeRateTip;
    }
  }

  public BuyResp deepCopy() {
    return new BuyResp(this);
  }

  @Override
  public void clear() {
    this.head = null;
    this.authStep = null;
    setCanBuyIsSet(false);
    this.canBuy = false;
    setVirtualRemainShareIsSet(false);
    this.virtualRemainShare = 0;
    setMaxBuyLimitIsSet(false);
    this.maxBuyLimit = 0;
    setMinBuyLimitIsSet(false);
    this.minBuyLimit = 0;
    setIncrShareIsSet(false);
    this.incrShare = 0;
    setIncomeRateE6IsSet(false);
    this.incomeRateE6 = 0;
    setMinIncomeRateE6IsSet(false);
    this.minIncomeRateE6 = 0;
    this.productName = null;
    this.incomeBeginDate = null;
    this.incomeEndDate = null;
    setIncomePeriodIsSet(false);
    this.incomePeriod = 0;
    setUnpaidShareIsSet(false);
    this.unpaidShare = 0;
    this.incomeTip = null;
    this.incomeRateTip = null;
  }

  public com.bangcar.app.mapi.base.MApiRespHead getHead() {
    return this.head;
  }

  public BuyResp setHead(com.bangcar.app.mapi.base.MApiRespHead head) {
    this.head = head;
    return this;
  }

  public void unsetHead() {
    this.head = null;
  }

  /** Returns true if field head is set (has been assigned a value) and false otherwise */
  public boolean isSetHead() {
    return this.head != null;
  }

  public void setHeadIsSet(boolean value) {
    if (!value) {
      this.head = null;
    }
  }

  /**
   * 认证阶段
   * 
   * @see com.bangcar.app.mapi.common.EAuthStep
   */
  public com.bangcar.app.mapi.common.EAuthStep getAuthStep() {
    return this.authStep;
  }

  /**
   * 认证阶段
   * 
   * @see com.bangcar.app.mapi.common.EAuthStep
   */
  public BuyResp setAuthStep(com.bangcar.app.mapi.common.EAuthStep authStep) {
    this.authStep = authStep;
    return this;
  }

  public void unsetAuthStep() {
    this.authStep = null;
  }

  /** Returns true if field authStep is set (has been assigned a value) and false otherwise */
  public boolean isSetAuthStep() {
    return this.authStep != null;
  }

  public void setAuthStepIsSet(boolean value) {
    if (!value) {
      this.authStep = null;
    }
  }

  /**
   * 是否可进购买页（满足实际库存、购买时间限制，存在未支付时能进购买页但不允许下单，通过virtualRemainShare来判断），若为false不能展示购买页，可刷新产品页
   */
  public boolean isCanBuy() {
    return this.canBuy;
  }

  /**
   * 是否可进购买页（满足实际库存、购买时间限制，存在未支付时能进购买页但不允许下单，通过virtualRemainShare来判断），若为false不能展示购买页，可刷新产品页
   */
  public BuyResp setCanBuy(boolean canBuy) {
    this.canBuy = canBuy;
    setCanBuyIsSet(true);
    return this;
  }

  public void unsetCanBuy() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CANBUY_ISSET_ID);
  }

  /** Returns true if field canBuy is set (has been assigned a value) and false otherwise */
  public boolean isSetCanBuy() {
    return EncodingUtils.testBit(__isset_bitfield, __CANBUY_ISSET_ID);
  }

  public void setCanBuyIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CANBUY_ISSET_ID, value);
  }

  /**
   * 剩余库存（虚拟）
   */
  public int getVirtualRemainShare() {
    return this.virtualRemainShare;
  }

  /**
   * 剩余库存（虚拟）
   */
  public BuyResp setVirtualRemainShare(int virtualRemainShare) {
    this.virtualRemainShare = virtualRemainShare;
    setVirtualRemainShareIsSet(true);
    return this;
  }

  public void unsetVirtualRemainShare() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __VIRTUALREMAINSHARE_ISSET_ID);
  }

  /** Returns true if field virtualRemainShare is set (has been assigned a value) and false otherwise */
  public boolean isSetVirtualRemainShare() {
    return EncodingUtils.testBit(__isset_bitfield, __VIRTUALREMAINSHARE_ISSET_ID);
  }

  public void setVirtualRemainShareIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __VIRTUALREMAINSHARE_ISSET_ID, value);
  }

  /**
   * 当次支付上限[实际是min(virtualRemainShare, maxBuyShare)]
   */
  public int getMaxBuyLimit() {
    return this.maxBuyLimit;
  }

  /**
   * 当次支付上限[实际是min(virtualRemainShare, maxBuyShare)]
   */
  public BuyResp setMaxBuyLimit(int maxBuyLimit) {
    this.maxBuyLimit = maxBuyLimit;
    setMaxBuyLimitIsSet(true);
    return this;
  }

  public void unsetMaxBuyLimit() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MAXBUYLIMIT_ISSET_ID);
  }

  /** Returns true if field maxBuyLimit is set (has been assigned a value) and false otherwise */
  public boolean isSetMaxBuyLimit() {
    return EncodingUtils.testBit(__isset_bitfield, __MAXBUYLIMIT_ISSET_ID);
  }

  public void setMaxBuyLimitIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MAXBUYLIMIT_ISSET_ID, value);
  }

  /**
   * 当次支付下限[实际是min(virtualRemainShare, minBuyShare)]
   */
  public int getMinBuyLimit() {
    return this.minBuyLimit;
  }

  /**
   * 当次支付下限[实际是min(virtualRemainShare, minBuyShare)]
   */
  public BuyResp setMinBuyLimit(int minBuyLimit) {
    this.minBuyLimit = minBuyLimit;
    setMinBuyLimitIsSet(true);
    return this;
  }

  public void unsetMinBuyLimit() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MINBUYLIMIT_ISSET_ID);
  }

  /** Returns true if field minBuyLimit is set (has been assigned a value) and false otherwise */
  public boolean isSetMinBuyLimit() {
    return EncodingUtils.testBit(__isset_bitfield, __MINBUYLIMIT_ISSET_ID);
  }

  public void setMinBuyLimitIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MINBUYLIMIT_ISSET_ID, value);
  }

  /**
   * 增量
   */
  public int getIncrShare() {
    return this.incrShare;
  }

  /**
   * 增量
   */
  public BuyResp setIncrShare(int incrShare) {
    this.incrShare = incrShare;
    setIncrShareIsSet(true);
    return this;
  }

  public void unsetIncrShare() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __INCRSHARE_ISSET_ID);
  }

  /** Returns true if field incrShare is set (has been assigned a value) and false otherwise */
  public boolean isSetIncrShare() {
    return EncodingUtils.testBit(__isset_bitfield, __INCRSHARE_ISSET_ID);
  }

  public void setIncrShareIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __INCRSHARE_ISSET_ID, value);
  }

  /**
   * 最高收益率
   */
  public long getIncomeRateE6() {
    return this.incomeRateE6;
  }

  /**
   * 最高收益率
   */
  public BuyResp setIncomeRateE6(long incomeRateE6) {
    this.incomeRateE6 = incomeRateE6;
    setIncomeRateE6IsSet(true);
    return this;
  }

  public void unsetIncomeRateE6() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __INCOMERATEE6_ISSET_ID);
  }

  /** Returns true if field incomeRateE6 is set (has been assigned a value) and false otherwise */
  public boolean isSetIncomeRateE6() {
    return EncodingUtils.testBit(__isset_bitfield, __INCOMERATEE6_ISSET_ID);
  }

  public void setIncomeRateE6IsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __INCOMERATEE6_ISSET_ID, value);
  }

  /**
   * 最低收益率
   */
  public long getMinIncomeRateE6() {
    return this.minIncomeRateE6;
  }

  /**
   * 最低收益率
   */
  public BuyResp setMinIncomeRateE6(long minIncomeRateE6) {
    this.minIncomeRateE6 = minIncomeRateE6;
    setMinIncomeRateE6IsSet(true);
    return this;
  }

  public void unsetMinIncomeRateE6() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MININCOMERATEE6_ISSET_ID);
  }

  /** Returns true if field minIncomeRateE6 is set (has been assigned a value) and false otherwise */
  public boolean isSetMinIncomeRateE6() {
    return EncodingUtils.testBit(__isset_bitfield, __MININCOMERATEE6_ISSET_ID);
  }

  public void setMinIncomeRateE6IsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MININCOMERATEE6_ISSET_ID, value);
  }

  /**
   * 产品名称
   */
  public String getProductName() {
    return this.productName;
  }

  /**
   * 产品名称
   */
  public BuyResp setProductName(String productName) {
    this.productName = productName;
    return this;
  }

  public void unsetProductName() {
    this.productName = null;
  }

  /** Returns true if field productName is set (has been assigned a value) and false otherwise */
  public boolean isSetProductName() {
    return this.productName != null;
  }

  public void setProductNameIsSet(boolean value) {
    if (!value) {
      this.productName = null;
    }
  }

  /**
   * 起息日
   */
  public String getIncomeBeginDate() {
    return this.incomeBeginDate;
  }

  /**
   * 起息日
   */
  public BuyResp setIncomeBeginDate(String incomeBeginDate) {
    this.incomeBeginDate = incomeBeginDate;
    return this;
  }

  public void unsetIncomeBeginDate() {
    this.incomeBeginDate = null;
  }

  /** Returns true if field incomeBeginDate is set (has been assigned a value) and false otherwise */
  public boolean isSetIncomeBeginDate() {
    return this.incomeBeginDate != null;
  }

  public void setIncomeBeginDateIsSet(boolean value) {
    if (!value) {
      this.incomeBeginDate = null;
    }
  }

  /**
   * 到期日
   */
  public String getIncomeEndDate() {
    return this.incomeEndDate;
  }

  /**
   * 到期日
   */
  public BuyResp setIncomeEndDate(String incomeEndDate) {
    this.incomeEndDate = incomeEndDate;
    return this;
  }

  public void unsetIncomeEndDate() {
    this.incomeEndDate = null;
  }

  /** Returns true if field incomeEndDate is set (has been assigned a value) and false otherwise */
  public boolean isSetIncomeEndDate() {
    return this.incomeEndDate != null;
  }

  public void setIncomeEndDateIsSet(boolean value) {
    if (!value) {
      this.incomeEndDate = null;
    }
  }

  /**
   * 计息天数
   */
  public int getIncomePeriod() {
    return this.incomePeriod;
  }

  /**
   * 计息天数
   */
  public BuyResp setIncomePeriod(int incomePeriod) {
    this.incomePeriod = incomePeriod;
    setIncomePeriodIsSet(true);
    return this;
  }

  public void unsetIncomePeriod() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __INCOMEPERIOD_ISSET_ID);
  }

  /** Returns true if field incomePeriod is set (has been assigned a value) and false otherwise */
  public boolean isSetIncomePeriod() {
    return EncodingUtils.testBit(__isset_bitfield, __INCOMEPERIOD_ISSET_ID);
  }

  public void setIncomePeriodIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __INCOMEPERIOD_ISSET_ID, value);
  }

  /**
   * 未支付金额
   */
  public int getUnpaidShare() {
    return this.unpaidShare;
  }

  /**
   * 未支付金额
   */
  public BuyResp setUnpaidShare(int unpaidShare) {
    this.unpaidShare = unpaidShare;
    setUnpaidShareIsSet(true);
    return this;
  }

  public void unsetUnpaidShare() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __UNPAIDSHARE_ISSET_ID);
  }

  /** Returns true if field unpaidShare is set (has been assigned a value) and false otherwise */
  public boolean isSetUnpaidShare() {
    return EncodingUtils.testBit(__isset_bitfield, __UNPAIDSHARE_ISSET_ID);
  }

  public void setUnpaidShareIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __UNPAIDSHARE_ISSET_ID, value);
  }

  /**
   * 收益提示文案
   */
  public String getIncomeTip() {
    return this.incomeTip;
  }

  /**
   * 收益提示文案
   */
  public BuyResp setIncomeTip(String incomeTip) {
    this.incomeTip = incomeTip;
    return this;
  }

  public void unsetIncomeTip() {
    this.incomeTip = null;
  }

  /** Returns true if field incomeTip is set (has been assigned a value) and false otherwise */
  public boolean isSetIncomeTip() {
    return this.incomeTip != null;
  }

  public void setIncomeTipIsSet(boolean value) {
    if (!value) {
      this.incomeTip = null;
    }
  }

  /**
   * 收益率提示文案
   */
  public String getIncomeRateTip() {
    return this.incomeRateTip;
  }

  /**
   * 收益率提示文案
   */
  public BuyResp setIncomeRateTip(String incomeRateTip) {
    this.incomeRateTip = incomeRateTip;
    return this;
  }

  public void unsetIncomeRateTip() {
    this.incomeRateTip = null;
  }

  /** Returns true if field incomeRateTip is set (has been assigned a value) and false otherwise */
  public boolean isSetIncomeRateTip() {
    return this.incomeRateTip != null;
  }

  public void setIncomeRateTipIsSet(boolean value) {
    if (!value) {
      this.incomeRateTip = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case HEAD:
      if (value == null) {
        unsetHead();
      } else {
        setHead((com.bangcar.app.mapi.base.MApiRespHead)value);
      }
      break;

    case AUTH_STEP:
      if (value == null) {
        unsetAuthStep();
      } else {
        setAuthStep((com.bangcar.app.mapi.common.EAuthStep)value);
      }
      break;

    case CAN_BUY:
      if (value == null) {
        unsetCanBuy();
      } else {
        setCanBuy((Boolean)value);
      }
      break;

    case VIRTUAL_REMAIN_SHARE:
      if (value == null) {
        unsetVirtualRemainShare();
      } else {
        setVirtualRemainShare((Integer)value);
      }
      break;

    case MAX_BUY_LIMIT:
      if (value == null) {
        unsetMaxBuyLimit();
      } else {
        setMaxBuyLimit((Integer)value);
      }
      break;

    case MIN_BUY_LIMIT:
      if (value == null) {
        unsetMinBuyLimit();
      } else {
        setMinBuyLimit((Integer)value);
      }
      break;

    case INCR_SHARE:
      if (value == null) {
        unsetIncrShare();
      } else {
        setIncrShare((Integer)value);
      }
      break;

    case INCOME_RATE_E6:
      if (value == null) {
        unsetIncomeRateE6();
      } else {
        setIncomeRateE6((Long)value);
      }
      break;

    case MIN_INCOME_RATE_E6:
      if (value == null) {
        unsetMinIncomeRateE6();
      } else {
        setMinIncomeRateE6((Long)value);
      }
      break;

    case PRODUCT_NAME:
      if (value == null) {
        unsetProductName();
      } else {
        setProductName((String)value);
      }
      break;

    case INCOME_BEGIN_DATE:
      if (value == null) {
        unsetIncomeBeginDate();
      } else {
        setIncomeBeginDate((String)value);
      }
      break;

    case INCOME_END_DATE:
      if (value == null) {
        unsetIncomeEndDate();
      } else {
        setIncomeEndDate((String)value);
      }
      break;

    case INCOME_PERIOD:
      if (value == null) {
        unsetIncomePeriod();
      } else {
        setIncomePeriod((Integer)value);
      }
      break;

    case UNPAID_SHARE:
      if (value == null) {
        unsetUnpaidShare();
      } else {
        setUnpaidShare((Integer)value);
      }
      break;

    case INCOME_TIP:
      if (value == null) {
        unsetIncomeTip();
      } else {
        setIncomeTip((String)value);
      }
      break;

    case INCOME_RATE_TIP:
      if (value == null) {
        unsetIncomeRateTip();
      } else {
        setIncomeRateTip((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case HEAD:
      return getHead();

    case AUTH_STEP:
      return getAuthStep();

    case CAN_BUY:
      return Boolean.valueOf(isCanBuy());

    case VIRTUAL_REMAIN_SHARE:
      return Integer.valueOf(getVirtualRemainShare());

    case MAX_BUY_LIMIT:
      return Integer.valueOf(getMaxBuyLimit());

    case MIN_BUY_LIMIT:
      return Integer.valueOf(getMinBuyLimit());

    case INCR_SHARE:
      return Integer.valueOf(getIncrShare());

    case INCOME_RATE_E6:
      return Long.valueOf(getIncomeRateE6());

    case MIN_INCOME_RATE_E6:
      return Long.valueOf(getMinIncomeRateE6());

    case PRODUCT_NAME:
      return getProductName();

    case INCOME_BEGIN_DATE:
      return getIncomeBeginDate();

    case INCOME_END_DATE:
      return getIncomeEndDate();

    case INCOME_PERIOD:
      return Integer.valueOf(getIncomePeriod());

    case UNPAID_SHARE:
      return Integer.valueOf(getUnpaidShare());

    case INCOME_TIP:
      return getIncomeTip();

    case INCOME_RATE_TIP:
      return getIncomeRateTip();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case HEAD:
      return isSetHead();
    case AUTH_STEP:
      return isSetAuthStep();
    case CAN_BUY:
      return isSetCanBuy();
    case VIRTUAL_REMAIN_SHARE:
      return isSetVirtualRemainShare();
    case MAX_BUY_LIMIT:
      return isSetMaxBuyLimit();
    case MIN_BUY_LIMIT:
      return isSetMinBuyLimit();
    case INCR_SHARE:
      return isSetIncrShare();
    case INCOME_RATE_E6:
      return isSetIncomeRateE6();
    case MIN_INCOME_RATE_E6:
      return isSetMinIncomeRateE6();
    case PRODUCT_NAME:
      return isSetProductName();
    case INCOME_BEGIN_DATE:
      return isSetIncomeBeginDate();
    case INCOME_END_DATE:
      return isSetIncomeEndDate();
    case INCOME_PERIOD:
      return isSetIncomePeriod();
    case UNPAID_SHARE:
      return isSetUnpaidShare();
    case INCOME_TIP:
      return isSetIncomeTip();
    case INCOME_RATE_TIP:
      return isSetIncomeRateTip();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof BuyResp)
      return this.equals((BuyResp)that);
    return false;
  }

  public boolean equals(BuyResp that) {
    if (that == null)
      return false;

    boolean this_present_head = true && this.isSetHead();
    boolean that_present_head = true && that.isSetHead();
    if (this_present_head || that_present_head) {
      if (!(this_present_head && that_present_head))
        return false;
      if (!this.head.equals(that.head))
        return false;
    }

    boolean this_present_authStep = true && this.isSetAuthStep();
    boolean that_present_authStep = true && that.isSetAuthStep();
    if (this_present_authStep || that_present_authStep) {
      if (!(this_present_authStep && that_present_authStep))
        return false;
      if (!this.authStep.equals(that.authStep))
        return false;
    }

    boolean this_present_canBuy = true;
    boolean that_present_canBuy = true;
    if (this_present_canBuy || that_present_canBuy) {
      if (!(this_present_canBuy && that_present_canBuy))
        return false;
      if (this.canBuy != that.canBuy)
        return false;
    }

    boolean this_present_virtualRemainShare = true;
    boolean that_present_virtualRemainShare = true;
    if (this_present_virtualRemainShare || that_present_virtualRemainShare) {
      if (!(this_present_virtualRemainShare && that_present_virtualRemainShare))
        return false;
      if (this.virtualRemainShare != that.virtualRemainShare)
        return false;
    }

    boolean this_present_maxBuyLimit = true;
    boolean that_present_maxBuyLimit = true;
    if (this_present_maxBuyLimit || that_present_maxBuyLimit) {
      if (!(this_present_maxBuyLimit && that_present_maxBuyLimit))
        return false;
      if (this.maxBuyLimit != that.maxBuyLimit)
        return false;
    }

    boolean this_present_minBuyLimit = true;
    boolean that_present_minBuyLimit = true;
    if (this_present_minBuyLimit || that_present_minBuyLimit) {
      if (!(this_present_minBuyLimit && that_present_minBuyLimit))
        return false;
      if (this.minBuyLimit != that.minBuyLimit)
        return false;
    }

    boolean this_present_incrShare = true;
    boolean that_present_incrShare = true;
    if (this_present_incrShare || that_present_incrShare) {
      if (!(this_present_incrShare && that_present_incrShare))
        return false;
      if (this.incrShare != that.incrShare)
        return false;
    }

    boolean this_present_incomeRateE6 = true;
    boolean that_present_incomeRateE6 = true;
    if (this_present_incomeRateE6 || that_present_incomeRateE6) {
      if (!(this_present_incomeRateE6 && that_present_incomeRateE6))
        return false;
      if (this.incomeRateE6 != that.incomeRateE6)
        return false;
    }

    boolean this_present_minIncomeRateE6 = true;
    boolean that_present_minIncomeRateE6 = true;
    if (this_present_minIncomeRateE6 || that_present_minIncomeRateE6) {
      if (!(this_present_minIncomeRateE6 && that_present_minIncomeRateE6))
        return false;
      if (this.minIncomeRateE6 != that.minIncomeRateE6)
        return false;
    }

    boolean this_present_productName = true && this.isSetProductName();
    boolean that_present_productName = true && that.isSetProductName();
    if (this_present_productName || that_present_productName) {
      if (!(this_present_productName && that_present_productName))
        return false;
      if (!this.productName.equals(that.productName))
        return false;
    }

    boolean this_present_incomeBeginDate = true && this.isSetIncomeBeginDate();
    boolean that_present_incomeBeginDate = true && that.isSetIncomeBeginDate();
    if (this_present_incomeBeginDate || that_present_incomeBeginDate) {
      if (!(this_present_incomeBeginDate && that_present_incomeBeginDate))
        return false;
      if (!this.incomeBeginDate.equals(that.incomeBeginDate))
        return false;
    }

    boolean this_present_incomeEndDate = true && this.isSetIncomeEndDate();
    boolean that_present_incomeEndDate = true && that.isSetIncomeEndDate();
    if (this_present_incomeEndDate || that_present_incomeEndDate) {
      if (!(this_present_incomeEndDate && that_present_incomeEndDate))
        return false;
      if (!this.incomeEndDate.equals(that.incomeEndDate))
        return false;
    }

    boolean this_present_incomePeriod = true;
    boolean that_present_incomePeriod = true;
    if (this_present_incomePeriod || that_present_incomePeriod) {
      if (!(this_present_incomePeriod && that_present_incomePeriod))
        return false;
      if (this.incomePeriod != that.incomePeriod)
        return false;
    }

    boolean this_present_unpaidShare = true;
    boolean that_present_unpaidShare = true;
    if (this_present_unpaidShare || that_present_unpaidShare) {
      if (!(this_present_unpaidShare && that_present_unpaidShare))
        return false;
      if (this.unpaidShare != that.unpaidShare)
        return false;
    }

    boolean this_present_incomeTip = true && this.isSetIncomeTip();
    boolean that_present_incomeTip = true && that.isSetIncomeTip();
    if (this_present_incomeTip || that_present_incomeTip) {
      if (!(this_present_incomeTip && that_present_incomeTip))
        return false;
      if (!this.incomeTip.equals(that.incomeTip))
        return false;
    }

    boolean this_present_incomeRateTip = true && this.isSetIncomeRateTip();
    boolean that_present_incomeRateTip = true && that.isSetIncomeRateTip();
    if (this_present_incomeRateTip || that_present_incomeRateTip) {
      if (!(this_present_incomeRateTip && that_present_incomeRateTip))
        return false;
      if (!this.incomeRateTip.equals(that.incomeRateTip))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  @Override
  public int compareTo(BuyResp other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetHead()).compareTo(other.isSetHead());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHead()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.head, other.head);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuthStep()).compareTo(other.isSetAuthStep());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuthStep()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.authStep, other.authStep);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCanBuy()).compareTo(other.isSetCanBuy());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCanBuy()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.canBuy, other.canBuy);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetVirtualRemainShare()).compareTo(other.isSetVirtualRemainShare());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVirtualRemainShare()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.virtualRemainShare, other.virtualRemainShare);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMaxBuyLimit()).compareTo(other.isSetMaxBuyLimit());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMaxBuyLimit()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.maxBuyLimit, other.maxBuyLimit);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMinBuyLimit()).compareTo(other.isSetMinBuyLimit());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMinBuyLimit()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.minBuyLimit, other.minBuyLimit);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIncrShare()).compareTo(other.isSetIncrShare());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIncrShare()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.incrShare, other.incrShare);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIncomeRateE6()).compareTo(other.isSetIncomeRateE6());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIncomeRateE6()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.incomeRateE6, other.incomeRateE6);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMinIncomeRateE6()).compareTo(other.isSetMinIncomeRateE6());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMinIncomeRateE6()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.minIncomeRateE6, other.minIncomeRateE6);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductName()).compareTo(other.isSetProductName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productName, other.productName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIncomeBeginDate()).compareTo(other.isSetIncomeBeginDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIncomeBeginDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.incomeBeginDate, other.incomeBeginDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIncomeEndDate()).compareTo(other.isSetIncomeEndDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIncomeEndDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.incomeEndDate, other.incomeEndDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIncomePeriod()).compareTo(other.isSetIncomePeriod());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIncomePeriod()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.incomePeriod, other.incomePeriod);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUnpaidShare()).compareTo(other.isSetUnpaidShare());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUnpaidShare()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.unpaidShare, other.unpaidShare);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIncomeTip()).compareTo(other.isSetIncomeTip());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIncomeTip()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.incomeTip, other.incomeTip);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIncomeRateTip()).compareTo(other.isSetIncomeRateTip());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIncomeRateTip()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.incomeRateTip, other.incomeRateTip);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("BuyResp(");
    boolean first = true;

    sb.append("head:");
    if (this.head == null) {
      sb.append("null");
    } else {
      sb.append(this.head);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("authStep:");
    if (this.authStep == null) {
      sb.append("null");
    } else {
      sb.append(this.authStep);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("canBuy:");
    sb.append(this.canBuy);
    first = false;
    if (!first) sb.append(", ");
    sb.append("virtualRemainShare:");
    sb.append(this.virtualRemainShare);
    first = false;
    if (!first) sb.append(", ");
    sb.append("maxBuyLimit:");
    sb.append(this.maxBuyLimit);
    first = false;
    if (!first) sb.append(", ");
    sb.append("minBuyLimit:");
    sb.append(this.minBuyLimit);
    first = false;
    if (!first) sb.append(", ");
    sb.append("incrShare:");
    sb.append(this.incrShare);
    first = false;
    if (!first) sb.append(", ");
    sb.append("incomeRateE6:");
    sb.append(this.incomeRateE6);
    first = false;
    if (!first) sb.append(", ");
    sb.append("minIncomeRateE6:");
    sb.append(this.minIncomeRateE6);
    first = false;
    if (!first) sb.append(", ");
    sb.append("productName:");
    if (this.productName == null) {
      sb.append("null");
    } else {
      sb.append(this.productName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("incomeBeginDate:");
    if (this.incomeBeginDate == null) {
      sb.append("null");
    } else {
      sb.append(this.incomeBeginDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("incomeEndDate:");
    if (this.incomeEndDate == null) {
      sb.append("null");
    } else {
      sb.append(this.incomeEndDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("incomePeriod:");
    sb.append(this.incomePeriod);
    first = false;
    if (!first) sb.append(", ");
    sb.append("unpaidShare:");
    sb.append(this.unpaidShare);
    first = false;
    if (!first) sb.append(", ");
    sb.append("incomeTip:");
    if (this.incomeTip == null) {
      sb.append("null");
    } else {
      sb.append(this.incomeTip);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("incomeRateTip:");
    if (this.incomeRateTip == null) {
      sb.append("null");
    } else {
      sb.append(this.incomeRateTip);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (head != null) {
      head.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class BuyRespStandardSchemeFactory implements SchemeFactory {
    public BuyRespStandardScheme getScheme() {
      return new BuyRespStandardScheme();
    }
  }

  private static class BuyRespStandardScheme extends StandardScheme<BuyResp> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, BuyResp struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // HEAD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.head = new com.bangcar.app.mapi.base.MApiRespHead();
              struct.head.read(iprot);
              struct.setHeadIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // AUTH_STEP
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.authStep = com.bangcar.app.mapi.common.EAuthStep.findByValue(iprot.readI32());
              struct.setAuthStepIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CAN_BUY
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.canBuy = iprot.readBool();
              struct.setCanBuyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // VIRTUAL_REMAIN_SHARE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.virtualRemainShare = iprot.readI32();
              struct.setVirtualRemainShareIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // MAX_BUY_LIMIT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.maxBuyLimit = iprot.readI32();
              struct.setMaxBuyLimitIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // MIN_BUY_LIMIT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.minBuyLimit = iprot.readI32();
              struct.setMinBuyLimitIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // INCR_SHARE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.incrShare = iprot.readI32();
              struct.setIncrShareIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // INCOME_RATE_E6
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.incomeRateE6 = iprot.readI64();
              struct.setIncomeRateE6IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // MIN_INCOME_RATE_E6
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.minIncomeRateE6 = iprot.readI64();
              struct.setMinIncomeRateE6IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // PRODUCT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.productName = iprot.readString();
              struct.setProductNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // INCOME_BEGIN_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.incomeBeginDate = iprot.readString();
              struct.setIncomeBeginDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // INCOME_END_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.incomeEndDate = iprot.readString();
              struct.setIncomeEndDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // INCOME_PERIOD
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.incomePeriod = iprot.readI32();
              struct.setIncomePeriodIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // UNPAID_SHARE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.unpaidShare = iprot.readI32();
              struct.setUnpaidShareIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // INCOME_TIP
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.incomeTip = iprot.readString();
              struct.setIncomeTipIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // INCOME_RATE_TIP
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.incomeRateTip = iprot.readString();
              struct.setIncomeRateTipIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, BuyResp struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.head != null) {
        oprot.writeFieldBegin(HEAD_FIELD_DESC);
        struct.head.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.authStep != null) {
        oprot.writeFieldBegin(AUTH_STEP_FIELD_DESC);
        oprot.writeI32(struct.authStep.getValue());
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CAN_BUY_FIELD_DESC);
      oprot.writeBool(struct.canBuy);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(VIRTUAL_REMAIN_SHARE_FIELD_DESC);
      oprot.writeI32(struct.virtualRemainShare);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(MAX_BUY_LIMIT_FIELD_DESC);
      oprot.writeI32(struct.maxBuyLimit);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(MIN_BUY_LIMIT_FIELD_DESC);
      oprot.writeI32(struct.minBuyLimit);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(INCR_SHARE_FIELD_DESC);
      oprot.writeI32(struct.incrShare);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(INCOME_RATE_E6_FIELD_DESC);
      oprot.writeI64(struct.incomeRateE6);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(MIN_INCOME_RATE_E6_FIELD_DESC);
      oprot.writeI64(struct.minIncomeRateE6);
      oprot.writeFieldEnd();
      if (struct.productName != null) {
        oprot.writeFieldBegin(PRODUCT_NAME_FIELD_DESC);
        oprot.writeString(struct.productName);
        oprot.writeFieldEnd();
      }
      if (struct.incomeBeginDate != null) {
        oprot.writeFieldBegin(INCOME_BEGIN_DATE_FIELD_DESC);
        oprot.writeString(struct.incomeBeginDate);
        oprot.writeFieldEnd();
      }
      if (struct.incomeEndDate != null) {
        oprot.writeFieldBegin(INCOME_END_DATE_FIELD_DESC);
        oprot.writeString(struct.incomeEndDate);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(INCOME_PERIOD_FIELD_DESC);
      oprot.writeI32(struct.incomePeriod);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(UNPAID_SHARE_FIELD_DESC);
      oprot.writeI32(struct.unpaidShare);
      oprot.writeFieldEnd();
      if (struct.incomeTip != null) {
        oprot.writeFieldBegin(INCOME_TIP_FIELD_DESC);
        oprot.writeString(struct.incomeTip);
        oprot.writeFieldEnd();
      }
      if (struct.incomeRateTip != null) {
        oprot.writeFieldBegin(INCOME_RATE_TIP_FIELD_DESC);
        oprot.writeString(struct.incomeRateTip);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class BuyRespTupleSchemeFactory implements SchemeFactory {
    public BuyRespTupleScheme getScheme() {
      return new BuyRespTupleScheme();
    }
  }

  private static class BuyRespTupleScheme extends TupleScheme<BuyResp> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, BuyResp struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetHead()) {
        optionals.set(0);
      }
      if (struct.isSetAuthStep()) {
        optionals.set(1);
      }
      if (struct.isSetCanBuy()) {
        optionals.set(2);
      }
      if (struct.isSetVirtualRemainShare()) {
        optionals.set(3);
      }
      if (struct.isSetMaxBuyLimit()) {
        optionals.set(4);
      }
      if (struct.isSetMinBuyLimit()) {
        optionals.set(5);
      }
      if (struct.isSetIncrShare()) {
        optionals.set(6);
      }
      if (struct.isSetIncomeRateE6()) {
        optionals.set(7);
      }
      if (struct.isSetMinIncomeRateE6()) {
        optionals.set(8);
      }
      if (struct.isSetProductName()) {
        optionals.set(9);
      }
      if (struct.isSetIncomeBeginDate()) {
        optionals.set(10);
      }
      if (struct.isSetIncomeEndDate()) {
        optionals.set(11);
      }
      if (struct.isSetIncomePeriod()) {
        optionals.set(12);
      }
      if (struct.isSetUnpaidShare()) {
        optionals.set(13);
      }
      if (struct.isSetIncomeTip()) {
        optionals.set(14);
      }
      if (struct.isSetIncomeRateTip()) {
        optionals.set(15);
      }
      oprot.writeBitSet(optionals, 16);
      if (struct.isSetHead()) {
        struct.head.write(oprot);
      }
      if (struct.isSetAuthStep()) {
        oprot.writeI32(struct.authStep.getValue());
      }
      if (struct.isSetCanBuy()) {
        oprot.writeBool(struct.canBuy);
      }
      if (struct.isSetVirtualRemainShare()) {
        oprot.writeI32(struct.virtualRemainShare);
      }
      if (struct.isSetMaxBuyLimit()) {
        oprot.writeI32(struct.maxBuyLimit);
      }
      if (struct.isSetMinBuyLimit()) {
        oprot.writeI32(struct.minBuyLimit);
      }
      if (struct.isSetIncrShare()) {
        oprot.writeI32(struct.incrShare);
      }
      if (struct.isSetIncomeRateE6()) {
        oprot.writeI64(struct.incomeRateE6);
      }
      if (struct.isSetMinIncomeRateE6()) {
        oprot.writeI64(struct.minIncomeRateE6);
      }
      if (struct.isSetProductName()) {
        oprot.writeString(struct.productName);
      }
      if (struct.isSetIncomeBeginDate()) {
        oprot.writeString(struct.incomeBeginDate);
      }
      if (struct.isSetIncomeEndDate()) {
        oprot.writeString(struct.incomeEndDate);
      }
      if (struct.isSetIncomePeriod()) {
        oprot.writeI32(struct.incomePeriod);
      }
      if (struct.isSetUnpaidShare()) {
        oprot.writeI32(struct.unpaidShare);
      }
      if (struct.isSetIncomeTip()) {
        oprot.writeString(struct.incomeTip);
      }
      if (struct.isSetIncomeRateTip()) {
        oprot.writeString(struct.incomeRateTip);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, BuyResp struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(16);
      if (incoming.get(0)) {
        struct.head = new com.bangcar.app.mapi.base.MApiRespHead();
        struct.head.read(iprot);
        struct.setHeadIsSet(true);
      }
      if (incoming.get(1)) {
        struct.authStep = com.bangcar.app.mapi.common.EAuthStep.findByValue(iprot.readI32());
        struct.setAuthStepIsSet(true);
      }
      if (incoming.get(2)) {
        struct.canBuy = iprot.readBool();
        struct.setCanBuyIsSet(true);
      }
      if (incoming.get(3)) {
        struct.virtualRemainShare = iprot.readI32();
        struct.setVirtualRemainShareIsSet(true);
      }
      if (incoming.get(4)) {
        struct.maxBuyLimit = iprot.readI32();
        struct.setMaxBuyLimitIsSet(true);
      }
      if (incoming.get(5)) {
        struct.minBuyLimit = iprot.readI32();
        struct.setMinBuyLimitIsSet(true);
      }
      if (incoming.get(6)) {
        struct.incrShare = iprot.readI32();
        struct.setIncrShareIsSet(true);
      }
      if (incoming.get(7)) {
        struct.incomeRateE6 = iprot.readI64();
        struct.setIncomeRateE6IsSet(true);
      }
      if (incoming.get(8)) {
        struct.minIncomeRateE6 = iprot.readI64();
        struct.setMinIncomeRateE6IsSet(true);
      }
      if (incoming.get(9)) {
        struct.productName = iprot.readString();
        struct.setProductNameIsSet(true);
      }
      if (incoming.get(10)) {
        struct.incomeBeginDate = iprot.readString();
        struct.setIncomeBeginDateIsSet(true);
      }
      if (incoming.get(11)) {
        struct.incomeEndDate = iprot.readString();
        struct.setIncomeEndDateIsSet(true);
      }
      if (incoming.get(12)) {
        struct.incomePeriod = iprot.readI32();
        struct.setIncomePeriodIsSet(true);
      }
      if (incoming.get(13)) {
        struct.unpaidShare = iprot.readI32();
        struct.setUnpaidShareIsSet(true);
      }
      if (incoming.get(14)) {
        struct.incomeTip = iprot.readString();
        struct.setIncomeTipIsSet(true);
      }
      if (incoming.get(15)) {
        struct.incomeRateTip = iprot.readString();
        struct.setIncomeRateTipIsSet(true);
      }
    }
  }

}

