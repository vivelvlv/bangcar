/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.bangcar.app.mapi.buy;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.EncodingUtils;

import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;

public class GetOrderIdReq implements org.apache.thrift.TBase<GetOrderIdReq, GetOrderIdReq._Fields>, java.io.Serializable, Cloneable, Comparable<GetOrderIdReq> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GetOrderIdReq");

  private static final org.apache.thrift.protocol.TField HEAD_FIELD_DESC = new org.apache.thrift.protocol.TField("head", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField PID_FIELD_DESC = new org.apache.thrift.protocol.TField("pid", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField IS_ANONYMOUS_FIELD_DESC = new org.apache.thrift.protocol.TField("isAnonymous", org.apache.thrift.protocol.TType.BOOL, (short)3);
  private static final org.apache.thrift.protocol.TField TOTAL_PRICE_E6_FIELD_DESC = new org.apache.thrift.protocol.TField("totalPriceE6", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField EXPECT_INCOME_E6_FIELD_DESC = new org.apache.thrift.protocol.TField("expectIncomeE6", org.apache.thrift.protocol.TType.I64, (short)5);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new GetOrderIdReqStandardSchemeFactory());
    schemes.put(TupleScheme.class, new GetOrderIdReqTupleSchemeFactory());
  }

  public com.bangcar.app.mapi.base.MApiReqHead head; // required
  /**
   * 产品id
   */
  public int pid; // required
  /**
   * 是否匿名
   */
  public boolean isAnonymous; // required
  /**
   * 投资金额
   */
  public long totalPriceE6; // required
  /**
   * 预期收益
   */
  public long expectIncomeE6; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    HEAD((short)1, "head"),
    /**
     * 产品id
     */
    PID((short)2, "pid"),
    /**
     * 是否匿名
     */
    IS_ANONYMOUS((short)3, "isAnonymous"),
    /**
     * 投资金额
     */
    TOTAL_PRICE_E6((short)4, "totalPriceE6"),
    /**
     * 预期收益
     */
    EXPECT_INCOME_E6((short)5, "expectIncomeE6");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // HEAD
          return HEAD;
        case 2: // PID
          return PID;
        case 3: // IS_ANONYMOUS
          return IS_ANONYMOUS;
        case 4: // TOTAL_PRICE_E6
          return TOTAL_PRICE_E6;
        case 5: // EXPECT_INCOME_E6
          return EXPECT_INCOME_E6;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PID_ISSET_ID = 0;
  private static final int __ISANONYMOUS_ISSET_ID = 1;
  private static final int __TOTALPRICEE6_ISSET_ID = 2;
  private static final int __EXPECTINCOMEE6_ISSET_ID = 3;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.HEAD, new org.apache.thrift.meta_data.FieldMetaData("head", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.bangcar.app.mapi.base.MApiReqHead.class)));
    tmpMap.put(_Fields.PID, new org.apache.thrift.meta_data.FieldMetaData("pid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.IS_ANONYMOUS, new org.apache.thrift.meta_data.FieldMetaData("isAnonymous", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.TOTAL_PRICE_E6, new org.apache.thrift.meta_data.FieldMetaData("totalPriceE6", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.EXPECT_INCOME_E6, new org.apache.thrift.meta_data.FieldMetaData("expectIncomeE6", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(GetOrderIdReq.class, metaDataMap);
  }

  public GetOrderIdReq() {
  }

  public GetOrderIdReq(
    com.bangcar.app.mapi.base.MApiReqHead head,
    int pid,
    boolean isAnonymous,
    long totalPriceE6,
    long expectIncomeE6)
  {
    this();
    this.head = head;
    this.pid = pid;
    setPidIsSet(true);
    this.isAnonymous = isAnonymous;
    setIsAnonymousIsSet(true);
    this.totalPriceE6 = totalPriceE6;
    setTotalPriceE6IsSet(true);
    this.expectIncomeE6 = expectIncomeE6;
    setExpectIncomeE6IsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public GetOrderIdReq(GetOrderIdReq other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetHead()) {
      this.head = new com.bangcar.app.mapi.base.MApiReqHead(other.head);
    }
    this.pid = other.pid;
    this.isAnonymous = other.isAnonymous;
    this.totalPriceE6 = other.totalPriceE6;
    this.expectIncomeE6 = other.expectIncomeE6;
  }

  public GetOrderIdReq deepCopy() {
    return new GetOrderIdReq(this);
  }

  @Override
  public void clear() {
    this.head = null;
    setPidIsSet(false);
    this.pid = 0;
    setIsAnonymousIsSet(false);
    this.isAnonymous = false;
    setTotalPriceE6IsSet(false);
    this.totalPriceE6 = 0;
    setExpectIncomeE6IsSet(false);
    this.expectIncomeE6 = 0;
  }

  public com.bangcar.app.mapi.base.MApiReqHead getHead() {
    return this.head;
  }

  public GetOrderIdReq setHead(com.bangcar.app.mapi.base.MApiReqHead head) {
    this.head = head;
    return this;
  }

  public void unsetHead() {
    this.head = null;
  }

  /** Returns true if field head is set (has been assigned a value) and false otherwise */
  public boolean isSetHead() {
    return this.head != null;
  }

  public void setHeadIsSet(boolean value) {
    if (!value) {
      this.head = null;
    }
  }

  /**
   * 产品id
   */
  public int getPid() {
    return this.pid;
  }

  /**
   * 产品id
   */
  public GetOrderIdReq setPid(int pid) {
    this.pid = pid;
    setPidIsSet(true);
    return this;
  }

  public void unsetPid() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PID_ISSET_ID);
  }

  /** Returns true if field pid is set (has been assigned a value) and false otherwise */
  public boolean isSetPid() {
    return EncodingUtils.testBit(__isset_bitfield, __PID_ISSET_ID);
  }

  public void setPidIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PID_ISSET_ID, value);
  }

  /**
   * 是否匿名
   */
  public boolean isIsAnonymous() {
    return this.isAnonymous;
  }

  /**
   * 是否匿名
   */
  public GetOrderIdReq setIsAnonymous(boolean isAnonymous) {
    this.isAnonymous = isAnonymous;
    setIsAnonymousIsSet(true);
    return this;
  }

  public void unsetIsAnonymous() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISANONYMOUS_ISSET_ID);
  }

  /** Returns true if field isAnonymous is set (has been assigned a value) and false otherwise */
  public boolean isSetIsAnonymous() {
    return EncodingUtils.testBit(__isset_bitfield, __ISANONYMOUS_ISSET_ID);
  }

  public void setIsAnonymousIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISANONYMOUS_ISSET_ID, value);
  }

  /**
   * 投资金额
   */
  public long getTotalPriceE6() {
    return this.totalPriceE6;
  }

  /**
   * 投资金额
   */
  public GetOrderIdReq setTotalPriceE6(long totalPriceE6) {
    this.totalPriceE6 = totalPriceE6;
    setTotalPriceE6IsSet(true);
    return this;
  }

  public void unsetTotalPriceE6() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TOTALPRICEE6_ISSET_ID);
  }

  /** Returns true if field totalPriceE6 is set (has been assigned a value) and false otherwise */
  public boolean isSetTotalPriceE6() {
    return EncodingUtils.testBit(__isset_bitfield, __TOTALPRICEE6_ISSET_ID);
  }

  public void setTotalPriceE6IsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TOTALPRICEE6_ISSET_ID, value);
  }

  /**
   * 预期收益
   */
  public long getExpectIncomeE6() {
    return this.expectIncomeE6;
  }

  /**
   * 预期收益
   */
  public GetOrderIdReq setExpectIncomeE6(long expectIncomeE6) {
    this.expectIncomeE6 = expectIncomeE6;
    setExpectIncomeE6IsSet(true);
    return this;
  }

  public void unsetExpectIncomeE6() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __EXPECTINCOMEE6_ISSET_ID);
  }

  /** Returns true if field expectIncomeE6 is set (has been assigned a value) and false otherwise */
  public boolean isSetExpectIncomeE6() {
    return EncodingUtils.testBit(__isset_bitfield, __EXPECTINCOMEE6_ISSET_ID);
  }

  public void setExpectIncomeE6IsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __EXPECTINCOMEE6_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case HEAD:
      if (value == null) {
        unsetHead();
      } else {
        setHead((com.bangcar.app.mapi.base.MApiReqHead)value);
      }
      break;

    case PID:
      if (value == null) {
        unsetPid();
      } else {
        setPid((Integer)value);
      }
      break;

    case IS_ANONYMOUS:
      if (value == null) {
        unsetIsAnonymous();
      } else {
        setIsAnonymous((Boolean)value);
      }
      break;

    case TOTAL_PRICE_E6:
      if (value == null) {
        unsetTotalPriceE6();
      } else {
        setTotalPriceE6((Long)value);
      }
      break;

    case EXPECT_INCOME_E6:
      if (value == null) {
        unsetExpectIncomeE6();
      } else {
        setExpectIncomeE6((Long)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case HEAD:
      return getHead();

    case PID:
      return Integer.valueOf(getPid());

    case IS_ANONYMOUS:
      return Boolean.valueOf(isIsAnonymous());

    case TOTAL_PRICE_E6:
      return Long.valueOf(getTotalPriceE6());

    case EXPECT_INCOME_E6:
      return Long.valueOf(getExpectIncomeE6());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case HEAD:
      return isSetHead();
    case PID:
      return isSetPid();
    case IS_ANONYMOUS:
      return isSetIsAnonymous();
    case TOTAL_PRICE_E6:
      return isSetTotalPriceE6();
    case EXPECT_INCOME_E6:
      return isSetExpectIncomeE6();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof GetOrderIdReq)
      return this.equals((GetOrderIdReq)that);
    return false;
  }

  public boolean equals(GetOrderIdReq that) {
    if (that == null)
      return false;

    boolean this_present_head = true && this.isSetHead();
    boolean that_present_head = true && that.isSetHead();
    if (this_present_head || that_present_head) {
      if (!(this_present_head && that_present_head))
        return false;
      if (!this.head.equals(that.head))
        return false;
    }

    boolean this_present_pid = true;
    boolean that_present_pid = true;
    if (this_present_pid || that_present_pid) {
      if (!(this_present_pid && that_present_pid))
        return false;
      if (this.pid != that.pid)
        return false;
    }

    boolean this_present_isAnonymous = true;
    boolean that_present_isAnonymous = true;
    if (this_present_isAnonymous || that_present_isAnonymous) {
      if (!(this_present_isAnonymous && that_present_isAnonymous))
        return false;
      if (this.isAnonymous != that.isAnonymous)
        return false;
    }

    boolean this_present_totalPriceE6 = true;
    boolean that_present_totalPriceE6 = true;
    if (this_present_totalPriceE6 || that_present_totalPriceE6) {
      if (!(this_present_totalPriceE6 && that_present_totalPriceE6))
        return false;
      if (this.totalPriceE6 != that.totalPriceE6)
        return false;
    }

    boolean this_present_expectIncomeE6 = true;
    boolean that_present_expectIncomeE6 = true;
    if (this_present_expectIncomeE6 || that_present_expectIncomeE6) {
      if (!(this_present_expectIncomeE6 && that_present_expectIncomeE6))
        return false;
      if (this.expectIncomeE6 != that.expectIncomeE6)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  @Override
  public int compareTo(GetOrderIdReq other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetHead()).compareTo(other.isSetHead());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHead()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.head, other.head);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPid()).compareTo(other.isSetPid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pid, other.pid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsAnonymous()).compareTo(other.isSetIsAnonymous());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsAnonymous()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isAnonymous, other.isAnonymous);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTotalPriceE6()).compareTo(other.isSetTotalPriceE6());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTotalPriceE6()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.totalPriceE6, other.totalPriceE6);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExpectIncomeE6()).compareTo(other.isSetExpectIncomeE6());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExpectIncomeE6()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.expectIncomeE6, other.expectIncomeE6);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("GetOrderIdReq(");
    boolean first = true;

    sb.append("head:");
    if (this.head == null) {
      sb.append("null");
    } else {
      sb.append(this.head);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("pid:");
    sb.append(this.pid);
    first = false;
    if (!first) sb.append(", ");
    sb.append("isAnonymous:");
    sb.append(this.isAnonymous);
    first = false;
    if (!first) sb.append(", ");
    sb.append("totalPriceE6:");
    sb.append(this.totalPriceE6);
    first = false;
    if (!first) sb.append(", ");
    sb.append("expectIncomeE6:");
    sb.append(this.expectIncomeE6);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (head != null) {
      head.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class GetOrderIdReqStandardSchemeFactory implements SchemeFactory {
    public GetOrderIdReqStandardScheme getScheme() {
      return new GetOrderIdReqStandardScheme();
    }
  }

  private static class GetOrderIdReqStandardScheme extends StandardScheme<GetOrderIdReq> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, GetOrderIdReq struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // HEAD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.head = new com.bangcar.app.mapi.base.MApiReqHead();
              struct.head.read(iprot);
              struct.setHeadIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // PID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.pid = iprot.readI32();
              struct.setPidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // IS_ANONYMOUS
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isAnonymous = iprot.readBool();
              struct.setIsAnonymousIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // TOTAL_PRICE_E6
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.totalPriceE6 = iprot.readI64();
              struct.setTotalPriceE6IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // EXPECT_INCOME_E6
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.expectIncomeE6 = iprot.readI64();
              struct.setExpectIncomeE6IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, GetOrderIdReq struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.head != null) {
        oprot.writeFieldBegin(HEAD_FIELD_DESC);
        struct.head.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PID_FIELD_DESC);
      oprot.writeI32(struct.pid);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(IS_ANONYMOUS_FIELD_DESC);
      oprot.writeBool(struct.isAnonymous);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(TOTAL_PRICE_E6_FIELD_DESC);
      oprot.writeI64(struct.totalPriceE6);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(EXPECT_INCOME_E6_FIELD_DESC);
      oprot.writeI64(struct.expectIncomeE6);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class GetOrderIdReqTupleSchemeFactory implements SchemeFactory {
    public GetOrderIdReqTupleScheme getScheme() {
      return new GetOrderIdReqTupleScheme();
    }
  }

  private static class GetOrderIdReqTupleScheme extends TupleScheme<GetOrderIdReq> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, GetOrderIdReq struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetHead()) {
        optionals.set(0);
      }
      if (struct.isSetPid()) {
        optionals.set(1);
      }
      if (struct.isSetIsAnonymous()) {
        optionals.set(2);
      }
      if (struct.isSetTotalPriceE6()) {
        optionals.set(3);
      }
      if (struct.isSetExpectIncomeE6()) {
        optionals.set(4);
      }
      oprot.writeBitSet(optionals, 5);
      if (struct.isSetHead()) {
        struct.head.write(oprot);
      }
      if (struct.isSetPid()) {
        oprot.writeI32(struct.pid);
      }
      if (struct.isSetIsAnonymous()) {
        oprot.writeBool(struct.isAnonymous);
      }
      if (struct.isSetTotalPriceE6()) {
        oprot.writeI64(struct.totalPriceE6);
      }
      if (struct.isSetExpectIncomeE6()) {
        oprot.writeI64(struct.expectIncomeE6);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, GetOrderIdReq struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(5);
      if (incoming.get(0)) {
        struct.head = new com.bangcar.app.mapi.base.MApiReqHead();
        struct.head.read(iprot);
        struct.setHeadIsSet(true);
      }
      if (incoming.get(1)) {
        struct.pid = iprot.readI32();
        struct.setPidIsSet(true);
      }
      if (incoming.get(2)) {
        struct.isAnonymous = iprot.readBool();
        struct.setIsAnonymousIsSet(true);
      }
      if (incoming.get(3)) {
        struct.totalPriceE6 = iprot.readI64();
        struct.setTotalPriceE6IsSet(true);
      }
      if (incoming.get(4)) {
        struct.expectIncomeE6 = iprot.readI64();
        struct.setExpectIncomeE6IsSet(true);
      }
    }
  }

}

